// Generated by Haxe 3.4.0
(function () { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.exists = function(it,f) {
	var x = it.iterator();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.filter = function(it,f) {
	var l = new List();
	var x = it.iterator();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			l.add(x1);
		}
	}
	return l;
};
var List = function() {
	this.length = 0;
};
List.__name__ = true;
List.prototype = {
	add: function(item) {
		var x = new _$List_ListNode(item,null);
		if(this.h == null) {
			this.h = x;
		} else {
			this.q.next = x;
		}
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = new _$List_ListNode(item,this.h);
		this.h = x;
		if(this.q == null) {
			this.q = x;
		}
		this.length++;
	}
	,iterator: function() {
		return new _$List_ListIterator(this.h);
	}
};
var _$List_ListNode = function(item,next) {
	this.item = item;
	this.next = next;
};
_$List_ListNode.__name__ = true;
var _$List_ListIterator = function(head) {
	this.head = head;
};
_$List_ListIterator.__name__ = true;
_$List_ListIterator.prototype = {
	hasNext: function() {
		return this.head != null;
	}
	,next: function() {
		var val = this.head.item;
		this.head = this.head.next;
		return val;
	}
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_Http = function(url) {
	this.url = url;
	this.headers = new List();
	this.params = new List();
	this.async = true;
	this.withCredentials = false;
};
haxe_Http.__name__ = true;
haxe_Http.prototype = {
	setParameter: function(param,value) {
		this.params = Lambda.filter(this.params,function(p) {
			return p.param != param;
		});
		this.params.push({ param : param, value : value});
		return this;
	}
	,request: function(post) {
		var me = this;
		me.responseData = null;
		var r = this.req = js_Browser.createXMLHttpRequest();
		var onreadystatechange = function(_) {
			if(r.readyState != 4) {
				return;
			}
			var s;
			try {
				s = r.status;
			} catch( e ) {
				s = null;
			}
			if(s != null && "undefined" !== typeof window) {
				var protocol = window.location.protocol.toLowerCase();
				var rlocalProtocol = new EReg("^(?:about|app|app-storage|.+-extension|file|res|widget):$","");
				var isLocal = rlocalProtocol.match(protocol);
				if(isLocal) {
					if(r.responseText != null) {
						s = 200;
					} else {
						s = 404;
					}
				}
			}
			if(s == undefined) {
				s = null;
			}
			if(s != null) {
				me.onStatus(s);
			}
			if(s != null && s >= 200 && s < 400) {
				me.req = null;
				me.onData(me.responseData = r.responseText);
			} else if(s == null) {
				me.req = null;
				me.onError("Failed to connect or resolve host");
			} else {
				switch(s) {
				case 12007:
					me.req = null;
					me.onError("Unknown host");
					break;
				case 12029:
					me.req = null;
					me.onError("Failed to connect to host");
					break;
				default:
					me.req = null;
					me.responseData = r.responseText;
					me.onError("Http Error #" + r.status);
				}
			}
		};
		if(this.async) {
			r.onreadystatechange = onreadystatechange;
		}
		var uri = this.postData;
		if(uri != null) {
			post = true;
		} else {
			var _g_head = this.params.h;
			while(_g_head != null) {
				var val = _g_head.item;
				_g_head = _g_head.next;
				var p = val;
				if(uri == null) {
					uri = "";
				} else {
					uri += "&";
				}
				var s1 = p.param;
				var uri1 = encodeURIComponent(s1) + "=";
				var s2 = p.value;
				uri += uri1 + encodeURIComponent(s2);
			}
		}
		try {
			if(post) {
				r.open("POST",this.url,this.async);
			} else if(uri != null) {
				var question = this.url.split("?").length <= 1;
				r.open("GET",this.url + (question ? "?" : "&") + uri,this.async);
				uri = null;
			} else {
				r.open("GET",this.url,this.async);
			}
		} catch( e1 ) {
			if (e1 instanceof js__$Boot_HaxeError) e1 = e1.val;
			me.req = null;
			this.onError(e1.toString());
			return;
		}
		r.withCredentials = this.withCredentials;
		if(!Lambda.exists(this.headers,function(h) {
			return h.header == "Content-Type";
		}) && post && this.postData == null) {
			r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		}
		var _g_head1 = this.headers.h;
		while(_g_head1 != null) {
			var val1 = _g_head1.item;
			_g_head1 = _g_head1.next;
			var h1 = val1;
			r.setRequestHeader(h1.header,h1.value);
		}
		r.send(uri);
		if(!this.async) {
			onreadystatechange(null);
		}
	}
	,onData: function(data) {
	}
	,onError: function(msg) {
	}
	,onStatus: function(status) {
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
};
var jp_okawa_utils_Estimate = function() { };
jp_okawa_utils_Estimate.__name__ = true;
jp_okawa_utils_Estimate.insertComma = function(numberString) {
	var ereg_r = new RegExp("(\\d)(?=(\\d{3})+$)","g".split("u").join(""));
	return numberString.replace(ereg_r,"$1,");
};
jp_okawa_utils_Estimate.getRandomRange = function(min,max) {
	return Math.random() * (max - min) + min;
};
var jp_okawa_utils_Ua = function() { };
jp_okawa_utils_Ua.__name__ = true;
jp_okawa_utils_Ua.getBrowserName = function() {
	var _ua = "miss";
	var user = jp_okawa_utils_Ua.userAgent.toLowerCase();
	var appVersion = window.navigator.appVersion.toLowerCase();
	if(user.indexOf("msie") != -1 || user.indexOf("trident") != -1) {
		_ua = "IE6or11";
		if(appVersion.indexOf("msie 6.") != -1) {
			_ua = "IE6";
		} else if(appVersion.indexOf("msie 7.") != -1) {
			_ua = "IE7";
		} else if(appVersion.indexOf("msie 8.") != -1) {
			_ua = "IE8";
		} else if(appVersion.indexOf("msie 9.") != -1) {
			_ua = "IE9";
		}
	} else if(user.indexOf("chrome") != -1) {
		_ua = "Chrome";
	} else if(user.indexOf("safari") != -1) {
		_ua = "Safari";
	} else if(user.indexOf("firefox") != -1) {
		_ua = "Firefox";
	}
	return _ua;
};
jp_okawa_utils_Ua.getDevice = function() {
	var _device = "pc";
	if(jp_okawa_utils_Ua.userAgent.indexOf("iPhone") > 0 && jp_okawa_utils_Ua.userAgent.indexOf("iPad") == -1 || jp_okawa_utils_Ua.userAgent.indexOf("iPod") > 0 || jp_okawa_utils_Ua.userAgent.indexOf("Android") > 0) {
		_device = "sp";
	}
	return _device;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_Browser = function() { };
js_Browser.__name__ = true;
js_Browser.createXMLHttpRequest = function() {
	if(typeof XMLHttpRequest != "undefined") {
		return new XMLHttpRequest();
	}
	if(typeof ActiveXObject != "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP");
	}
	throw new js__$Boot_HaxeError("Unable to create XMLHttpRequest object.");
};
var src_Main = function() { };
src_Main.__name__ = true;
src_Main.main = function() {
	$("document").ready(src_Manager.init);
};
var src_Manager = function() { };
src_Manager.__name__ = true;
src_Manager.init = function(event) {
	if(src_utils_UserAgent.isMobile()) {
		return;
	}
	src_utils_Resize.init();
	src_view_Intro.start();
	src_utils_ItemData.set(src_Manager.start);
	src_utils_Log.write();
};
src_Manager.start = function() {
	src_view_Mainboard.init();
	src_utils_UrlParameter.init();
	src_view_Price.init();
	src_view_Mainmenu.init();
	src_view_Sidemenu.init();
	src_view_ProductLength.init();
	src_view_Trash.init();
	src_utils_UrlParameter.remakeObject();
	src_Manager.setCounter();
	src_utils_Drag.init();
	src_utils_Dom.jWindow.on("mouseup touchend",null,function(event) {
		src_Manager.setCounter();
		src_utils_Log.write();
		src_view_Trash.hide();
	});
};
src_Manager.setCounter = function() {
	src_utils_Drag.addBoardObj(src_view_Mainboard.getMainboardDom().find(".object"));
	var jBoardObj = src_utils_Drag.getBoardObj();
	var length = jBoardObj == null ? 0 : jBoardObj.length;
	var lengthArray = src_view_Mainboard.count(jBoardObj,length);
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		src_view_Mainmenu.addDrop(jBoardObj.eq(i).data("id"));
	}
	var accessoryLength = lengthArray[0];
	var bannerlength = lengthArray[1];
	var paperLength = lengthArray[2];
	var price = lengthArray[3];
	src_view_ProductLength.change(accessoryLength,bannerlength,paperLength);
	src_view_Price.change(price);
	src_utils_UrlParameter.change("?" + src_utils_UrlParameter.getParameter(jBoardObj,length,price));
};
var src_utils_Dom = function() { };
src_utils_Dom.__name__ = true;
var src_utils_Drag = function() { };
src_utils_Drag.__name__ = true;
src_utils_Drag.init = function() {
	src_utils_Drag._isGrabbed = false;
	src_utils_Drag._posiAnimate = false;
	src_utils_Drag._jMainboard = src_view_Mainboard.getMainboardDom();
	src_utils_Drag._jMainmenu = src_view_Mainmenu.getMainmenuDom();
	src_utils_Drag._jMainmenu.find(".slider").find("li").find(".img").on({ "mousedown touchstart" : src_utils_Drag.grab});
	src_utils_Dom.jWindow.on({ "mousemove" : src_utils_Drag.mousemove, "touchmove" : src_utils_Drag.mousemove, "mouseup" : src_utils_Drag.mouseup, "touchend" : src_utils_Drag.mouseup});
	src_utils_Drag.setBoardObj();
};
src_utils_Drag.setBoardObj = function() {
	src_utils_Drag._jBoardObj = src_utils_Drag._jMainboard.find(".object");
	src_utils_Drag._jBoardObj.on({ "mousedown touchstart" : src_utils_Drag.grab});
	src_utils_Drag._jBoardObj.on({ "mouseover touchstart" : src_utils_Drag.showOption});
};
src_utils_Drag.grab = function(event) {
	event.preventDefault();
	src_utils_Drag._jGrabObj = $(event.currentTarget);
	if(src_utils_Drag._jGrabObj.hasClass("drop") || src_utils_Drag._posiAnimate) {
		return;
	}
	src_utils_Drag.getDiff(event);
	src_utils_Drag.setPosition(event,0,0);
	src_utils_Drag._isGrabbed = true;
	src_view_Trash.getGrabPosi(event);
	src_utils_Drag._jGrabObj.addClass("grab");
};
src_utils_Drag.mousemove = function(event) {
	if(src_utils_Drag._isGrabbed) {
		src_utils_Drag.setPosition(event);
		src_view_Trash.onObj(src_utils_Drag._jGrabObj);
		if(src_utils_Drag._jGrabObj.hasClass("object")) {
			src_view_Trash.show(event);
		}
	}
};
src_utils_Drag.mouseup = function(event) {
	src_utils_Drag._isGrabbed = false;
	if(src_utils_Drag._jGrabObj == null) {
		return;
	}
	if(src_utils_Drag._jGrabObj.hasClass("grab")) {
		src_view_Trash.leaveObj(src_utils_Drag._jGrabObj);
		var h = $("#header").height();
		var w = src_utils_Drag._jMainboard.offset().left;
		src_utils_Drag.setPosition(event,-h,-w);
		src_utils_Drag._jGrabObj.removeClass("grab");
	}
	if(src_utils_Drag._jGrabObj.hasClass("img")) {
		var y = event.pageY != null ? event.pageY : event.originalEvent.changedTouches[0].pageY;
		if(src_utils_Drag._jMainmenu.find(".current").offset().top > y) {
			var jTarList = src_utils_Drag._jGrabObj.parent().parent("li");
			jTarList.addClass("drop");
			src_utils_Drag.listToObj(jTarList,event);
			src_utils_Drag._jBoardObj.unbind("mousedown touchstart");
			src_utils_Drag.setBoardObj();
		}
	}
	src_utils_Drag.judgeOnBoard(src_utils_Drag._jGrabObj);
	src_utils_Drag._jGrabObj.css({ "opacity" : 1});
	src_utils_Drag._jGrabObj = null;
};
src_utils_Drag.setPosition = function(event,top,left) {
	if(left == null) {
		left = 0;
	}
	if(top == null) {
		top = 0;
	}
	var type = event.type;
	var t = 0;
	var l = 0;
	if(type == "mousedown" || type == "mousemove") {
		t = event.clientY;
		l = event.clientX;
	} else if(type == "mouseup") {
		t = event.pageY;
		l = event.pageX;
	} else if(type == "touchend") {
		t = event.originalEvent.changedTouches[0].pageY;
		l = event.originalEvent.changedTouches[0].pageX;
	} else {
		t = event.originalEvent.touches[0].pageY;
		l = event.originalEvent.touches[0].pageX;
	}
	t = t - src_utils_Drag._diffY + top;
	l = l - src_utils_Drag._diffX + left;
	src_utils_Drag._jGrabObj.css({ "top" : t, "left" : l});
};
src_utils_Drag.getDiff = function(event) {
	src_utils_Drag._diffY = event.offsetY != null ? event.offsetY : Math.round(event.originalEvent.touches[0].pageY - src_utils_Drag._jGrabObj.offset().top);
	src_utils_Drag._diffX = event.offsetX != null ? event.offsetX : Math.round(event.originalEvent.touches[0].pageX - src_utils_Drag._jGrabObj.offset().left);
};
src_utils_Drag.listToObj = function(jTarget,event) {
	var id = jTarget.data("id");
	var type = jTarget.data("type");
	var cat = jTarget.data("cat");
	var icon = jTarget.data("icon");
	var price = Std.string(jTarget.data("price"));
	if(price.indexOf(",") > -1) {
		price = price.split(",").join("");
	}
	var length = jTarget.find("dl").find("dd.length").text();
	var color = src_utils_UrlParameter.getParamOption("color");
	var h = $("#header").height();
	var w = src_utils_Drag._jMainboard.offset().left;
	var top = event.pageY != null ? event.pageY - h - src_utils_Drag._diffY : event.originalEvent.changedTouches[0].pageY - h - src_utils_Drag._diffY;
	var left = event.pageX != null ? event.pageX - w - src_utils_Drag._diffX : event.originalEvent.changedTouches[0].pageX - w - src_utils_Drag._diffX;
	if(type == "accessory" || type == "clothes") {
		var ratio = src_utils_Resize.getRatio();
		var abs = jTarget.data("abs").split(",");
		top = Std.parseInt(abs[0]) * ratio;
		left = Std.parseInt(abs[1]) * ratio;
	}
	if(type == "clothes") {
		src_view_Mainmenu.clearDrop(src_utils_Drag._jBoardObj.filter(".clothes").data("id"));
		src_utils_Drag._jBoardObj.filter(".clothes").remove();
	}
	var html = src_utils_Html.getObj(id,top,left,type,cat,Std.parseInt(price),length,icon,color);
	var jBoard = src_utils_Drag._jMainboard.find(".board");
	jBoard.append(html);
	src_utils_Drag._jGrabObj = jBoard.find(".object." + id);
	TweenMax.set(src_utils_Drag._jGrabObj,{ scaleX : 1.4, scaleY : 1.4});
	TweenMax.to(src_utils_Drag._jGrabObj,0.3,{ scaleX : 1, scaleY : 1, ease : Elastic.easeOut, delay : 0.1, onComplete : function() {
		src_utils_Resize.resizeDom(jBoard.find(".object." + id),false);
	}});
};
src_utils_Drag.judgeOnBoard = function(jTarget) {
	var ratio = src_utils_Resize.getRatio();
	var top = Std.parseInt(jTarget.css("top"));
	var left = Std.parseInt(jTarget.css("left"));
	var bottom = top + jTarget.height();
	var right = left + jTarget.width();
	var areaB = src_utils_Drag._jMainboard.height();
	var areaR = Math.floor(698 * ratio);
	var judge = false;
	if(top < 53) {
		top = Math.floor(53 * ratio);
		judge = true;
	}
	if(left < 53) {
		left = Math.floor(53 * ratio);
		judge = true;
	}
	if(bottom > areaB) {
		top = areaB - jTarget.height();
		judge = true;
	}
	if(right > areaR) {
		left = areaR - jTarget.width();
		judge = true;
	}
	if(jTarget.hasClass("accessory") || jTarget.hasClass("clothes") || jTarget.hasClass("tableCover")) {
		if(src_view_Trash.isOnObj(jTarget)) {
			return;
		}
		var ratio1 = src_utils_Resize.getRatio();
		var abs = src_utils_Drag.getAbsPoint(jTarget);
		top = Math.round(Std.parseInt(abs[0]) * ratio1);
		left = Math.round(Std.parseInt(abs[1]) * ratio1);
		judge = true;
	}
	if(judge) {
		src_utils_Drag._posiAnimate = true;
		TweenMax.to(jTarget,0.5,{ top : top, left : left, delay : 0.05, ease : Expo.easeOut, onComplete : function() {
			src_Manager.setCounter();
			src_utils_Drag._posiAnimate = false;
		}});
	}
};
src_utils_Drag.getAbsPoint = function(jTarget) {
	var id = jTarget.data("id");
	return src_utils_ItemData.getObjectData(id).abs;
};
src_utils_Drag.showOption = function(event) {
	var jTarget = $(event.currentTarget);
	var length = jTarget.data("length");
	var price = jp_okawa_utils_Estimate.insertComma(Std.string(jTarget.data("price")));
	var html = "<span class=\"object-data\"><span>" + price + "円<br>";
	html += length + "</span></span>";
	jTarget.append(html);
	jTarget.on("mouseleave touchend",null,function(event1) {
		jTarget.find(".object-data").remove();
		jTarget.unbind("mouseleave touchend");
	});
};
src_utils_Drag.getGrabObj = function() {
	return src_utils_Drag._jGrabObj;
};
src_utils_Drag.getBoardObj = function() {
	return src_utils_Drag._jBoardObj;
};
src_utils_Drag.addBoardObj = function(jBoardObj) {
	src_utils_Drag._jBoardObj = jBoardObj;
};
src_utils_Drag.touchAnimate = function(event) {
	var html = "<div class=\"touch\" style=\"top:" + Std.string(event.clientY) + "px;";
	html += "left:" + Std.string(event.clientX) + "px;\"></div>";
	src_utils_Drag._jMainmenu.append(html);
	var jTar = src_utils_Drag._jMainmenu.find(".touch");
	TweenMax.to(jTar,0.3,{ opacity : 0.2, scaleX : 4, scaleY : 4, ease : Back.easeOut});
	var timer = new haxe_Timer(200);
	timer.run = function() {
		jTar.remove();
		timer.stop();
	};
};
var src_utils_Html = function() { };
src_utils_Html.__name__ = true;
src_utils_Html.getObj = function(id,top,left,type,cat,price,length,src1,color) {
	var html = "";
	html += "<p class=\"object " + id + " " + type + "\"";
	html += "style=\"top:" + top + "px;left:" + left + "px\"";
	html += "data-id=\"" + id + "\" data-cat=\"" + cat + "\" data-price=\"" + price + "\" data-length=\"" + length + "\">";
	html += "<img src=\"files/img/product/icon/" + color + "/" + src1 + "\">";
	html += "</p>";
	return html;
};
src_utils_Html.getList = function(id,type,cat,icon,price,bgImg,img,name,length,abs) {
	var html = "";
	html += "<li id=\"" + id + "\" title=\"" + name + "\" ";
	html += "data-id=\"" + id + "\" ";
	html += "data-type=\"" + type + "\" ";
	html += "data-abs=\"" + abs + "\" ";
	html += "data-cat=\"" + cat + "\" ";
	html += "data-icon=\"" + icon + "\" ";
	html += "data-price=\"" + price + "\">";
	html += "<div class=\"revertObj\"></div>";
	html += "<div class=\"img-box\" style=\"background: url(files/img/product/bg/" + bgImg + ") no-repeat center center;background-size:contain;\">";
	html += "<div class=\"img\">";
	html += "<img src=\"files/img/product/image/" + img + "\">";
	html += "</div>";
	html += "</div>";
	html += "<dl>";
	html += "<dt>" + name + "</dt>";
	html += "<dd class=\"length\">" + length + "</dd>";
	html += "<dd class=\"price\"><span>" + price + "</span>円</dd>";
	html += "</dl>";
	html += "</li>";
	return html;
};
var src_utils_ItemData = function() { };
src_utils_ItemData.__name__ = true;
src_utils_ItemData.set = function(callback) {
	src_utils_ItemData._callback = callback;
	var request = new haxe_Http("files/data/item.json");
	request.onData = src_utils_ItemData.onData;
	request.request(false);
};
src_utils_ItemData.onData = function(data) {
	src_utils_ItemData._itemData = JSON.parse(data);
	src_utils_ItemData._setData = src_utils_ItemData._itemData.set;
	src_utils_ItemData._objectMap = new haxe_ds_StringMap();
	var _g1 = 0;
	var _g = src_utils_ItemData._itemData.object.length;
	while(_g1 < _g) {
		var i = _g1++;
		var key = src_utils_ItemData._itemData.object[i].id;
		var _this = src_utils_ItemData._objectMap;
		var value = src_utils_ItemData._itemData.object[i];
		if(__map_reserved[key] != null) {
			_this.setReserved(key,value);
		} else {
			_this.h[key] = value;
		}
	}
	src_utils_ItemData._setMap = new haxe_ds_StringMap();
	var _g11 = 0;
	var _g2 = src_utils_ItemData._itemData.set.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		var key1 = src_utils_ItemData._itemData.set[i1].name;
		var _this1 = src_utils_ItemData._setMap;
		var value1 = src_utils_ItemData._itemData.set[i1];
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,value1);
		} else {
			_this1.h[key1] = value1;
		}
	}
	src_utils_ItemData.setList(src_utils_ItemData._itemData.object);
};
src_utils_ItemData.getObjectData = function(id) {
	var _this = src_utils_ItemData._objectMap;
	if(__map_reserved[id] != null) {
		return _this.getReserved(id);
	} else {
		return _this.h[id];
	}
};
src_utils_ItemData.getSetData = function(name) {
	var _this = src_utils_ItemData._setMap;
	if(__map_reserved[name] != null) {
		return _this.getReserved(name);
	} else {
		return _this.h[name];
	}
};
src_utils_ItemData.setList = function(data) {
	var length = data.length;
	var accessoryHtml = "";
	var bannerHtml = "";
	var paperHtml = "";
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var t = data[i];
		var abs = t.type == "accessory" || t.type == "clothes" ? t.abs : "";
		var html = src_utils_Html.getList(t.id,t.type,t.cat,t.icon,t.price,t.bgImg,t.img,t.name,t.length,abs);
		if(t.cat == "paper") {
			paperHtml += html;
		} else if(t.cat == "accessory") {
			accessoryHtml += html;
		} else if(t.cat == "banner") {
			bannerHtml += html;
		}
	}
	src_utils_ItemData.setHTML(accessoryHtml,bannerHtml,paperHtml);
};
src_utils_ItemData.setHTML = function(accessoryHtml,bannerHtml,paperHtml) {
	var jMainmenu = $("#mainmenu");
	jMainmenu.find("#sale-accessory").find(".slider").find("ul").append(accessoryHtml);
	jMainmenu.find("#sale-banner").find(".slider").find("ul").append(bannerHtml);
	jMainmenu.find("#sale-paper").find(".slider").find("ul").append(paperHtml);
	src_utils_ItemData._callback();
};
var src_utils_Log = function() { };
src_utils_Log.__name__ = true;
src_utils_Log.write = function() {
	var request = new haxe_Http("files/php/history.php");
	var param = "?" + src_utils_UrlParameter.getLocation().split("?")[1];
	var user = param.indexOf("?utm_content=") > -1 ? param.split("?utm_content=").join("").split("&")[0] : "none";
	request.setParameter("act","write");
	request.setParameter("param",param);
	request.setParameter("user",user);
	request.request(true);
};
var src_utils_Resize = function() { };
src_utils_Resize.__name__ = true;
src_utils_Resize.init = function() {
	src_utils_Resize._MaxWinHeight = 810;
	src_utils_Resize._objStateArray = new haxe_ds_StringMap();
	src_utils_Resize._jMainboard = $("#mainboard");
	src_utils_Resize._jSidemenuLeft = $("#sidemenu-left");
	src_utils_Resize._jSidemenuRight = $("#sidemenu-right");
	src_utils_Resize.setObjStateMap();
	src_utils_Resize.getWindowRatio();
	src_utils_Dom.jWindow.on("resize",null,function(event) {
		src_utils_Resize.getWindowRatio();
		var obj = src_utils_Resize._jMainboard.find(".object");
		var _g1 = 0;
		var _g = obj.length;
		while(_g1 < _g) {
			var i = _g1++;
			src_utils_Resize.resizeDom(obj.eq(i),true);
		}
		if(src_utils_Resize._resizeTimer != null) {
			src_utils_Resize._resizeTimer.stop();
		}
		src_utils_Resize._resizeTimer = new haxe_Timer(200);
		src_utils_Resize._resizeTimer.run = function() {
			src_utils_Resize.getWindowRatio(true);
			var obj1 = src_utils_Resize._jMainboard.find(".object");
			var _g11 = 0;
			var _g2 = obj1.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				src_utils_Resize.resizeDom(obj1.eq(i1),true);
			}
			src_utils_Resize._resizeTimer.stop();
		};
	});
};
src_utils_Resize.setObjStateMap = function() {
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard);
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .human"));
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .chair"));
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .desk"));
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .desk .desk-table"));
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .desk .desk-left"));
	src_utils_Resize.setObjState(src_utils_Resize._jMainboard.find(".board .desk .desk-right"));
	src_utils_Resize.setObjState(src_utils_Resize._jSidemenuRight);
	src_utils_Resize.setObjState(src_utils_Resize._jSidemenuLeft);
};
src_utils_Resize.setObjState = function(jTarget) {
	var name = jTarget.prop("id") ? jTarget.prop("id") : jTarget.prop("class");
	var array = [];
	array.push(jTarget.width());
	array.push(jTarget.height());
	array.push(Std.parseInt(jTarget.css("top")));
	array.push(Std.parseInt(jTarget.css("left")));
	var _this = src_utils_Resize._objStateArray;
	if(__map_reserved[name] != null) {
		_this.setReserved(name,array);
	} else {
		_this.h[name] = array;
	}
};
src_utils_Resize.getRatio = function() {
	return src_utils_Resize._ratio;
};
src_utils_Resize.setRatio = function() {
	var winH = src_utils_Dom.jWindow.height();
	src_utils_Resize._ratio = 100 * winH / src_utils_Resize._MaxWinHeight / 100;
	src_utils_Resize._ratio = src_utils_Resize._ratio > 1 ? 0.999 : src_utils_Resize._ratio;
};
src_utils_Resize.getWindowRatio = function(flag) {
	if(flag == null) {
		flag = false;
	}
	src_utils_Resize._ratio = 1;
	if(src_utils_Resize._MaxWinHeight > src_utils_Dom.jWindow.height() || flag) {
		src_utils_Resize.setRatio();
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard,false,true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .human"),true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .chair"),true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .desk"),true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .desk .desk-table"),true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .desk .desk-left"),true);
		src_utils_Resize.resizeDom(src_utils_Resize._jMainboard.find(".board .desk .desk-right"),true);
		var jTrashDiv = $("#trash").find("div");
		var _g1 = 0;
		var _g = jTrashDiv.length;
		while(_g1 < _g) {
			var i = _g1++;
			var jTrashTar = jTrashDiv.eq(i);
			src_utils_Resize.resizeDom(jTrashTar,false,true);
			if(jTrashTar.hasClass("trash-bg")) {
				var bottom = Std.parseInt(jTrashTar.css("bottom"));
				jTrashTar.css({ "bottom" : Math.round(bottom * src_utils_Resize._ratio)});
			}
		}
		TweenMax.set(src_utils_Resize._jSidemenuRight,{ scaleX : src_utils_Resize._ratio, scaleY : src_utils_Resize._ratio});
		TweenMax.set(src_utils_Resize._jSidemenuLeft,{ scaleX : src_utils_Resize._ratio, scaleY : src_utils_Resize._ratio});
		var topR = Std.parseInt(src_utils_Resize._jSidemenuRight.css("top"));
		var topL = Std.parseInt(src_utils_Resize._jSidemenuLeft.css("top"));
		var _this = src_utils_Resize._objStateArray;
		src_utils_Resize._jSidemenuRight.css({ "top" : Math.round((__map_reserved["sidemenu-right"] != null ? _this.getReserved("sidemenu-right") : _this.h["sidemenu-right"])[2] * src_utils_Resize._ratio)});
		var _this1 = src_utils_Resize._objStateArray;
		src_utils_Resize._jSidemenuLeft.css({ "top" : Math.round((__map_reserved["sidemenu-left"] != null ? _this1.getReserved("sidemenu-left") : _this1.h["sidemenu-left"])[2] * src_utils_Resize._ratio)});
	}
};
src_utils_Resize.resizeDom = function(jTarget,isPosi,isMLeft) {
	if(isMLeft == null) {
		isMLeft = false;
	}
	if(isPosi == null) {
		isPosi = false;
	}
	if(src_utils_Resize._ratio == 1) {
		return;
	}
	if(isPosi) {
		var name = jTarget.prop("id") ? jTarget.prop("id") : jTarget.prop("class");
		var top = 0;
		var left = 0;
		var _this = src_utils_Resize._objStateArray;
		if(__map_reserved[name] != null ? _this.existsReserved(name) : _this.h.hasOwnProperty(name)) {
			var _this1 = src_utils_Resize._objStateArray;
			top = (__map_reserved[name] != null ? _this1.getReserved(name) : _this1.h[name])[2];
			var _this2 = src_utils_Resize._objStateArray;
			left = (__map_reserved[name] != null ? _this2.getReserved(name) : _this2.h[name])[3];
		} else {
			var r_r = new RegExp("[^0-9^\\.]","g".split("u").join(""));
			var id = Std.parseInt(name.replace(r_r,""));
			top = src_utils_UrlParameter.getParamOption((id == null ? "null" : "" + id) + "_y");
			left = src_utils_UrlParameter.getParamOption((id == null ? "null" : "" + id) + "_x");
		}
		jTarget.css({ "top" : top * src_utils_Resize._ratio, "left" : left * src_utils_Resize._ratio});
	}
	if(jTarget.hasClass("object")) {
		var img = new Image();
		img.src = jTarget.find("img").prop("src");
		var tmp = Math.round(img.width * src_utils_Resize._ratio);
		var tmp1 = Math.round(img.height * src_utils_Resize._ratio);
		jTarget.find("img").css({ width : tmp, height : tmp1});
		return;
	}
	if(jTarget.css("background-image") != "none") {
		var img1 = new Image();
		var a = jTarget.css("background-image");
		var src1 = a.indexOf("url(\"") > -1 ? a.split("url(\"")[1].split("\")")[0] : a.split("url(")[1].split(")")[0];
		img1.src = src1;
		var w = Math.round(img1.width * src_utils_Resize._ratio);
		var h = Math.round(img1.height * src_utils_Resize._ratio);
		jTarget.width(w);
		jTarget.height(h);
		if(isMLeft) {
			jTarget.css({ "margin-left" : -(w / 2)});
		}
	}
	if(jTarget.hasClass("trash-bg")) {
		jTarget.width(Math.round(200 * src_utils_Resize._ratio));
		jTarget.height(Math.round(200 * src_utils_Resize._ratio));
		jTarget.css({ "margin-left" : -100 * src_utils_Resize._ratio + "px", "bottom" : -60 * src_utils_Resize._ratio + "px"});
	}
};
var src_utils_UrlParameter = function() { };
src_utils_UrlParameter.__name__ = true;
src_utils_UrlParameter.init = function() {
	src_utils_UrlParameter._title = $("title").text();
	var location = src_utils_UrlParameter.getLocation();
	if(location.indexOf("&color=") > -1) {
		var logColor = location.split("&color=")[1].split("&")[0];
		$("#color-btn").prop("class",logColor);
		var jColorList = $("#sidemenu-right").find("ul.color-list");
		jColorList.find(".current").removeClass("current");
		jColorList.find("." + logColor).addClass("current");
	}
};
src_utils_UrlParameter.remakeObject = function() {
	var url = src_utils_UrlParameter.getLocation();
	src_utils_UrlParameter._user = src_utils_UrlParameter.getParamOption("utm_content");
	if(url.indexOf("?") > -1) {
		var param = url.split("?");
		src_utils_UrlParameter.createObject(param[1]);
	}
	src_utils_UrlParameter.resizeObj();
};
src_utils_UrlParameter.getLocation = function() {
	return Std.string(src_utils_Dom.window.location);
};
src_utils_UrlParameter.createObject = function(param) {
	var paramArray = param.split("&");
	var length = paramArray.length;
	var color = src_utils_UrlParameter.getColorParam().split("color=").join("");
	var x = 0;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var item = paramArray[i].split("=");
		if(item[0].indexOf("_x") > -1) {
			x = parseFloat(item[1]);
		}
		if(item[0].indexOf("_y") > -1) {
			var id = item[0].split("_")[0];
			src_utils_UrlParameter.addHtml(id,color,x,parseFloat(item[1]));
		}
	}
};
src_utils_UrlParameter.addHtml = function(id,color,x,y) {
	var html = "";
	var data = src_utils_ItemData.getObjectData(id);
	var type = data.type;
	var cat = data.cat;
	var icon = data.icon;
	var price = data.price;
	if(price.indexOf(",") > -1) {
		price = price.split(",").join("");
	}
	var length = data.length;
	var top = y;
	var left = x;
	html += src_utils_Html.getObj(id,top,left,type,cat,Std.parseInt(price),length,icon,color);
	src_view_Mainmenu.addDrop(id);
	src_view_Mainboard.getMainboardDom().find(".board").append(html);
};
src_utils_UrlParameter.resizeObj = function() {
	var targetArray = src_view_Mainboard.getMainboardDom().find(".board").find(".object");
	var length = targetArray.length;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		src_utils_Resize.resizeDom(targetArray.eq(i),true);
	}
};
src_utils_UrlParameter.getParameter = function(jTarget,length,price) {
	var param = "";
	param += src_utils_UrlParameter.getUserParam();
	param += "&" + src_utils_UrlParameter.getColorParam();
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		if(i == 0) {
			param += "&";
		}
		var str = i == length - 1 ? "" : "&";
		param += src_utils_UrlParameter.getObjectParam(jTarget.eq(i)) + str;
	}
	param += "&" + src_utils_UrlParameter.getPriceParam(price);
	return param;
};
src_utils_UrlParameter.getUserParam = function() {
	return "utm_content=" + src_utils_UrlParameter._user;
};
src_utils_UrlParameter.getColorParam = function() {
	var color = $("#color-btn").prop("class");
	if(color.indexOf(" open") > -1) {
		color = color.split(" open").join("");
	}
	return "color=" + color;
};
src_utils_UrlParameter.getObjectParam = function(jTarget) {
	var ratio = src_utils_Resize.getRatio();
	var id = jTarget.data("id");
	var x = Math.round(Std.parseInt(jTarget.css("left")) / ratio);
	var y = Math.round(Std.parseInt(jTarget.css("top")) / ratio);
	return id + "_x=" + x + "&" + id + "_y=" + y;
};
src_utils_UrlParameter.getPriceParam = function(price) {
	return "price=" + price;
};
src_utils_UrlParameter.change = function(string) {
	var param = "";
	if(string.indexOf("utm_content") == -1) {
		param = "?" + src_utils_UrlParameter.getUserParam() + "&";
		string = string.split("?")[1];
	}
	param += string;
	History.replaceState("",src_utils_UrlParameter._title,param);
};
src_utils_UrlParameter.getParamOption = function(string) {
	if(string == null) {
		string = "price";
	}
	string += "=";
	var url = src_utils_UrlParameter.getLocation().split("/");
	var search = url[url.length - 1];
	var option = search.split(string);
	var str = option[1];
	var param = "";
	if(str == null) {
		return "none";
	}
	if(str.indexOf("&") != -1) {
		option = str.split("&");
		param = option[0];
	} else {
		param = str;
	}
	return param;
};
var src_utils_UserAgent = function() { };
src_utils_UserAgent.__name__ = true;
src_utils_UserAgent.isMobile = function() {
	var isMobile = jp_okawa_utils_Ua.getDevice() == "sp";
	if(isMobile) {
		$("#all").hide();
		$("body,html").css({ "min-width" : "100%"});
		$("body").append(src_utils_UserAgent.getHTML());
	}
	return isMobile;
};
src_utils_UserAgent.getHTML = function() {
	return "<div id=\"mobile-view\">\n\t\t\t\t\t<p>まるごとブースファクトリーは<br>スマートフォンではご利用できません。<br>PCやタブレットでお楽しみください。</p>\n\t\t\t\t</div>";
};
var src_view_Intro = function() { };
src_view_Intro.__name__ = true;
src_view_Intro.start = function() {
	src_view_Intro.fadeIn($("#header"),0.4);
	src_view_Intro.fadeLeft($("#sidemenu-left"),0.6);
	src_view_Intro.fadeRight($("#sidemenu-right"),0.6);
	src_view_Intro.fadeUp($("#footer"),0.8);
	src_view_Intro.fadeUp($("#mainmenu"),0.8);
	src_view_Intro.fadeDown($("#mainboard"),1);
};
src_view_Intro.fadeIn = function(target,i) {
	if(i == null) {
		i = 0;
	}
	TweenMax.set(target,{ y : "-50px"});
	TweenMax.to(target,1,{ opacity : 1, y : 0, ease : Expo.easeOut, delay : i});
};
src_view_Intro.fadeDown = function(target,i) {
	if(i == null) {
		i = 0;
	}
	TweenMax.set(target,{ marginTop : "-50px"});
	TweenMax.to(target,1,{ opacity : 1, marginTop : 0, ease : Expo.easeOut, delay : i});
};
src_view_Intro.fadeUp = function(target,i) {
	if(i == null) {
		i = 0;
	}
	TweenMax.set(target,{ marginBottom : "-50px"});
	TweenMax.to(target,1,{ opacity : 1, marginBottom : 0, ease : Expo.easeOut, delay : i});
};
src_view_Intro.fadeLeft = function(target,i) {
	if(i == null) {
		i = 0;
	}
	TweenMax.set(target,{ marginLeft : "-50px"});
	TweenMax.to(target,1,{ opacity : 1, marginLeft : 0, ease : Expo.easeOut, delay : i});
};
src_view_Intro.fadeRight = function(target,i) {
	if(i == null) {
		i = 0;
	}
	TweenMax.set(target,{ marginRight : "-50px"});
	TweenMax.to(target,1,{ opacity : 1, marginRight : 0, ease : Expo.easeOut, delay : i});
};
src_view_Intro.onBtn = function() {
};
var src_view_Mainboard = function() { };
src_view_Mainboard.__name__ = true;
src_view_Mainboard.init = function() {
	src_view_Mainboard._jMainboard = $("#mainboard");
	src_view_mainboard_Human.init(src_view_Mainboard._jMainboard);
};
src_view_Mainboard.getMainboardDom = function() {
	return src_view_Mainboard._jMainboard;
};
src_view_Mainboard.clear = function(cls) {
	if(cls == null) {
		src_view_Mainboard._jMainboard.find(".object").remove();
	} else {
		src_view_Mainboard._jMainboard.find("." + cls).remove();
	}
};
src_view_Mainboard.count = function(_jAreaObj,length) {
	var jAreaObj = _jAreaObj;
	var lengthArray = [0,0,0,0];
	if(length > 0) {
		lengthArray = src_view_Mainboard.loop(jAreaObj,length);
	}
	return lengthArray;
};
src_view_Mainboard.loop = function(jItem,length) {
	var price = 0;
	var accessoryLength = 0;
	var bannerLength = 0;
	var paperLength = 0;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var catData = jItem.eq(i).data("cat");
		var priceData = jItem.eq(i).data("price");
		if(catData == "accessory") {
			++accessoryLength;
		}
		if(catData == "banner") {
			++bannerLength;
		}
		if(catData == "paper") {
			++paperLength;
		}
		price += priceData;
	}
	return [accessoryLength,bannerLength,paperLength,price];
};
src_view_Mainboard.talkHuman = function(str) {
};
var src_view_Mainmenu = function() { };
src_view_Mainmenu.__name__ = true;
src_view_Mainmenu.init = function() {
	src_view_Mainmenu._jMainmenu = $("#mainmenu");
	src_view_Mainmenu._jFooter = $("#footer");
	src_view_Mainmenu._jBtn = src_view_Mainmenu._jMainmenu.find(".ttl").find("p");
	if(src_utils_Resize.getRatio() < 0.75) {
		src_view_Mainmenu._jMainmenu.addClass("ratio");
	}
	var jRevertBtn = src_view_Mainmenu._jMainmenu.find(".slider").find("ul li").find(".revertObj");
	src_view_mainmenu_Scrollbar.init(src_view_Mainmenu._jMainmenu);
	src_view_Mainmenu.adjustBoxHeight();
	src_utils_Dom.jWindow.on("resize",null,function(event) {
		src_view_Mainmenu.adjustBoxHeight();
	});
	src_view_Mainmenu._jBtn.on("mousedown",null,function(event1) {
		src_view_Mainmenu.clickBtn($(event1.currentTarget),event1);
	});
	src_utils_Dom.jWindow.on("mousemove",null,function(event2) {
		src_view_Mainmenu.moveUpMenu(event2);
	});
	src_view_Mainmenu._jMainmenu.on("mouseleave",null,function(event3) {
		src_view_Mainmenu._Timer = new haxe_Timer(1000);
		src_view_Mainmenu._Timer.run = src_view_Mainmenu.close;
	});
	src_view_Mainmenu._jMainmenu.on("mouseover",null,function(event4) {
		if(src_view_Mainmenu._Timer == null) {
			return;
		}
		src_view_Mainmenu._Timer.stop();
	});
	jRevertBtn.on("mousedown",null,function(event5) {
		var jTar = $(event5.currentTarget).parent();
		var id = jTar.prop("id");
		src_view_Mainboard.clear(id);
		jTar.removeClass("drop");
		return false;
	});
};
src_view_Mainmenu.moveUpMenu = function(event) {
	var menuTop = src_view_Mainmenu._jMainmenu.offset().top - src_view_Mainmenu._jBtn.height() - 20;
	var footTop = src_view_Mainmenu._jFooter.offset().top;
	var y = event.pageY;
	if(src_view_Mainmenu._jMainmenu.hasClass("open")) {
		TweenMax.to(src_view_Mainmenu._jMainmenu,.1,{ "margin-bottom" : "0"});
		return;
	}
	if(menuTop < y && footTop > y) {
		TweenMax.to(src_view_Mainmenu._jMainmenu,.3,{ "margin-bottom" : "30px"});
	} else {
		TweenMax.to(src_view_Mainmenu._jMainmenu,.3,{ "margin-bottom" : "0"});
	}
};
src_view_Mainmenu.adjustBoxHeight = function() {
	var jSlider = src_view_Mainmenu._jMainmenu.find(".slider");
	var _g1 = 0;
	var _g = jSlider.length;
	while(_g1 < _g) {
		var i = _g1++;
		src_view_Mainmenu.setBoxHeight(jSlider.eq(i).find("ul"));
	}
};
src_view_Mainmenu.setBoxHeight = function(jTarget) {
	var jList = jTarget.find("li");
	var length = jList.length;
	var parWidth = jTarget.width();
	var width = jList.width() + Std.parseInt(jList.css("margin-left"));
	var column = Math.floor(parWidth / width);
	var height = 0;
	var point = 0;
	jList.removeAttr("style");
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var jTar = jList.eq(i);
		var h = jTar.height();
		if(h > height) {
			height = h;
		}
	}
	jList.height(height);
};
src_view_Mainmenu.setScrollBtn = function(jUp,jDw,scrollTop,height) {
	if(scrollTop > 0) {
		jUp.show();
	} else {
		jUp.hide();
	}
	if(scrollTop >= height - 220) {
		jDw.hide();
	} else {
		jDw.show();
	}
};
src_view_Mainmenu.clickBtn = function(jThis,event) {
	var cls = jThis.prop("class");
	var jTarget = src_view_Mainmenu._jMainmenu.find(".inner");
	var h = jTarget.find("#" + cls).outerHeight() * -1 + 1;
	src_view_Mainmenu.addCurrent(cls);
	if(src_view_Mainmenu._jMainmenu.hasClass("close")) {
		src_view_Mainmenu.open(jTarget,h);
	}
};
src_view_Mainmenu.open = function(jTarget,h) {
	src_view_Mainmenu.clickClose();
	src_view_Mainmenu._jMainmenu.removeClass("close");
	src_view_Mainmenu._jMainmenu.addClass("open");
	TweenMax.to(src_view_Mainmenu._jMainmenu,.1,{ "margin-bottom" : "0"});
	TweenMax.to(jTarget,0.3,{ top : h, ease : Expo.easeOut});
};
src_view_Mainmenu.close = function() {
	src_view_Mainmenu._jMainmenu.removeClass("open");
	src_view_Mainmenu._jMainmenu.addClass("close");
	TweenMax.to(src_view_Mainmenu._jMainmenu.find(".inner"),1,{ top : 0, ease : Elastic.easeOut});
	src_view_Mainmenu._Timer.stop();
};
src_view_Mainmenu.addCurrent = function(cls) {
	src_view_Mainmenu._jMainmenu.find("div").removeClass("current");
	src_view_Mainmenu._jMainmenu.find("#" + cls).addClass("current");
};
src_view_Mainmenu.clickClose = function() {
	src_utils_Dom.jWindow.on("mousedown touchstart",null,function(event) {
		var y = event.pageY != null ? event.pageY : event.originalEvent.touches[0].pageY;
		if(src_view_Mainmenu._jMainmenu.find(".current").offset().top - 100 > y) {
			if(src_view_Mainmenu._jMainmenu.hasClass("open")) {
				src_view_Mainmenu._jMainmenu.removeClass("open");
				src_view_Mainmenu._jMainmenu.addClass("close");
				TweenMax.to(src_view_Mainmenu._jMainmenu.find(".inner"),1,{ top : 0, ease : Elastic.easeOut});
			}
		}
	});
};
src_view_Mainmenu.addDrop = function(id) {
	if(src_view_Mainmenu._jMainmenu.find("#" + id) == null) {
		return;
	}
	src_view_Mainmenu._jMainmenu.find("#" + id).addClass("drop");
};
src_view_Mainmenu.clearDrop = function(id) {
	if(id == "all") {
		src_view_Mainmenu._jMainmenu.find(".drop").removeClass("drop");
	} else {
		src_view_Mainmenu._jMainmenu.find("#" + id).removeClass("drop");
	}
};
src_view_Mainmenu.getMainmenuDom = function() {
	return src_view_Mainmenu._jMainmenu;
};
var src_view_Price = function() { };
src_view_Price.__name__ = true;
src_view_Price.init = function() {
	src_view_Price._jContact = $("#contact");
	src_view_Price._jContactBox = src_view_Price._jContact.find(".contact-box");
	src_view_Price._jImg = src_view_Price._jContactBox.find("#price").find("img");
	src_view_Price._jPrice = src_view_Price._jContactBox.find("#price").find("span");
	src_view_Price._price = 0;
	src_view_Price._jImg.on("mousedown",null,function(event) {
		event.preventDefault();
		var jTarget = $(event.currentTarget);
		jTarget.parent().append(jTarget.clone().addClass("coin").css({ position : "absolute", left : "15px"}));
		TweenMax.to(jTarget.parent().find(".coin"),0.3,{ y : -60, opacity : 0, onComplete : function() {
			jTarget.parent().find(".coin").remove();
		}});
	});
};
src_view_Price.change = function(price) {
	if(src_view_Price._price == price) {
		return;
	}
	src_view_Price._price = price;
	src_view_Price.motion(jp_okawa_utils_Estimate.insertComma(price == null ? "null" : "" + price));
	src_view_Price.calPriceSize(price);
};
src_view_Price.motion = function(str) {
	var array = str.split("");
	var html = "";
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		html += "<span>" + array[i] + "</span>";
	}
	src_view_Price._jPrice.html(html);
	var price = src_view_Price._jPrice.find("span");
	var length = price.length;
	var g = length;
	TweenMax.set(price,{ top : -40, opacity : 0});
	var _g11 = 0;
	var _g2 = length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		--g;
		TweenMax.to(price.eq(g),0.1,{ top : 0, opacity : 1, ease : Elastic.easeOut, delay : i1 * 0.1});
	}
};
src_view_Price.calPriceSize = function(price) {
	var jImg = src_view_Price._jContactBox.find("#price").find("img");
	var array = jImg.prop("src").split("/");
	var len = jImg.prop("src").split("/").length;
	var now = array[len - 1];
	var val = "ss.png";
	if(price < 10000) {
		val = "ss.png";
	}
	if(price > 10000 && price < 100000) {
		val = "s.png";
	}
	if(price > 100000 && price < 200000) {
		val = "m.png";
	}
	if(price > 200000) {
		val = "l.png";
	}
	var newImg = now.split("_");
	newImg[newImg.length - 1] = val;
	var newSrc = newImg.join("_");
	array[len - 1] = newSrc;
	jImg.prop("src",array.join("/"));
};
src_view_Price.clear = function() {
	src_view_Price._jPrice.text("0");
};
var src_view_ProductLength = function() { };
src_view_ProductLength.__name__ = true;
src_view_ProductLength.init = function() {
	src_view_ProductLength._jLenAccessory = $("#length-accessory").find(".item-length").find("span");
	src_view_ProductLength._jLenBanner = $("#length-banner").find(".item-length").find("span");
	src_view_ProductLength._jLenPaper = $("#length-paper").find(".item-length").find("span");
	src_view_ProductLength._lenAcce = 0;
	src_view_ProductLength._lenBanner = 0;
	src_view_ProductLength._lenPaper = 0;
	if(jp_okawa_utils_Ua.getDevice() == "sp") {
		src_view_ProductLength.setSpMode();
	}
};
src_view_ProductLength.change = function(accessoryLength,bannerLength,paperLength) {
	if(accessoryLength != src_view_ProductLength._lenAcce) {
		src_view_ProductLength._lenAcce = accessoryLength;
		src_view_ProductLength.motion(src_view_ProductLength._jLenAccessory,accessoryLength);
	}
	if(bannerLength != src_view_ProductLength._lenBanner) {
		src_view_ProductLength._lenBanner = bannerLength;
		src_view_ProductLength.motion(src_view_ProductLength._jLenBanner,bannerLength);
	}
	if(paperLength != src_view_ProductLength._lenPaper) {
		src_view_ProductLength._lenPaper = paperLength;
		src_view_ProductLength.motion(src_view_ProductLength._jLenPaper,paperLength);
	}
};
src_view_ProductLength.clear = function() {
	src_view_ProductLength._jLenAccessory.text("0");
	src_view_ProductLength._jLenBanner.text("0");
	src_view_ProductLength._jLenPaper.text("0");
};
src_view_ProductLength.motion = function(jTarget,length) {
	TweenMax.set(jTarget,{ top : -30, opacity : 0});
	jTarget.text(length == null ? "null" : "" + length);
	TweenMax.to(jTarget,0.5,{ top : 0, opacity : 1, ease : Elastic.easeOut, delay : 0.1});
};
src_view_ProductLength.setSpMode = function() {
	var jSideL = $("#sidemenu-left");
	var jSideR = $("#sidemenu-right");
	var winH = src_utils_Dom.jWindow.height();
	jSideR.css({ top : "auto", bottom : "60px"});
	jSideL.css({ top : jSideR.offset().top});
};
var src_view_Sidemenu = function() {
};
src_view_Sidemenu.__name__ = true;
src_view_Sidemenu.init = function() {
	src_view_Sidemenu._jBtnMatu = $("#set-name-matu");
	src_view_Sidemenu._jBtnTake = $("#set-name-take");
	src_view_Sidemenu._jBtnUme = $("#set-name-ume");
	src_view_Sidemenu._jBtnColor = $("#color-btn");
	src_view_Sidemenu._jBtnHelp = $("#help-btn");
	src_view_Sidemenu._jBtnClear = $("#clear-btn");
	src_view_sidemenu_Lightbox.init();
	src_view_Sidemenu.setRightMenu();
};
src_view_Sidemenu.setRightMenu = function() {
	src_view_Sidemenu._jBtnMatu.on("mousedown",null,function(event) {
		src_view_Sidemenu.setPacage(src_utils_ItemData.getSetData("matu").url);
	});
	src_view_Sidemenu._jBtnMatu.on("mouseover",null,function(event1) {
		src_view_Mainboard.talkHuman("松セットです。/高いです。");
	});
	src_view_Sidemenu._jBtnTake.on("mousedown",null,function(event2) {
		src_view_Sidemenu.setPacage(src_utils_ItemData.getSetData("take").url);
	});
	src_view_Sidemenu._jBtnTake.on("mouseover",null,function(event3) {
		src_view_Mainboard.talkHuman("竹セットです。/やや高いです。");
	});
	src_view_Sidemenu._jBtnUme.on("mousedown",null,function(event4) {
		src_view_Sidemenu.setPacage(src_utils_ItemData.getSetData("ume").url);
	});
	src_view_Sidemenu._jBtnUme.on("mouseover",null,function(event5) {
		src_view_Mainboard.talkHuman("梅セットです。/お手頃ですね。");
	});
	src_view_Sidemenu._jBtnColor.on("mousedown",null,function(event6) {
		src_view_sidemenu_Color.show($(event6.currentTarget));
	});
	src_view_Sidemenu._jBtnColor.on("mouseover",null,function(event7) {
		src_view_Mainboard.talkHuman("色の変更が出来ます。");
	});
	src_view_Sidemenu._jBtnHelp.on("mousedown",null,function(event8) {
		src_view_sidemenu_Lightbox.show("help",$(event8.currentTarget));
	});
	src_view_Sidemenu._jBtnHelp.on("mouseover",null,function(event9) {
		src_view_Mainboard.talkHuman("ヘルプです。");
	});
	src_view_Sidemenu._jBtnClear.on("mousedown",null,function(event10) {
		src_view_Sidemenu.setPacage("?");
		src_view_Price.clear();
		src_view_ProductLength.clear();
		src_view_Mainmenu.clearDrop("all");
	});
	src_view_Sidemenu._jBtnClear.on("mouseover",null,function(event11) {
		src_view_Mainboard.talkHuman("全部消せます。");
	});
};
src_view_Sidemenu.setPacage = function(data) {
	var url = src_utils_UrlParameter.getLocation();
	if(url.indexOf("_x") > -1) {
		src_view_Mainboard.clear();
		src_view_Mainmenu.clearDrop("all");
	}
	src_utils_UrlParameter.change(data);
	src_utils_UrlParameter.remakeObject();
	src_utils_Drag.setBoardObj();
};
var src_view_Trash = function() { };
src_view_Trash.__name__ = true;
src_view_Trash.init = function() {
	src_view_Trash._jTrash = $("#trash");
	src_view_Trash._jTrashBox = src_view_Trash._jTrash.find(".trash-box");
	src_view_Trash._jTrashFront = src_view_Trash._jTrash.find(".trash-front");
	src_view_Trash._jTrashArrow = src_view_Trash._jTrash.find(".trash-arrow");
	src_view_Trash._jTrashBg = src_view_Trash._jTrash.find(".trash-bg");
	src_view_Trash._isGrabbed = false;
	src_view_Trash._isAnimate = false;
	src_view_Trash._isShow = false;
};
src_view_Trash.onObj = function(jTarget) {
	if(src_view_Trash.isOnObj(jTarget)) {
		jTarget.css({ opacity : "0"});
		if(src_view_Trash._isAnimate) {
			return;
		}
		src_view_Trash._isAnimate = true;
		TweenMax.to(src_view_Trash._jTrashBox,1,{ scaleX : 1.4, scaleY : 1.4, ease : Elastic.easeOut});
		TweenMax.to(src_view_Trash._jTrashFront,1,{ scaleX : 1.4, scaleY : 1.4, ease : Elastic.easeOut});
		TweenMax.to(src_view_Trash._jTrashBg,1,{ scaleX : 0.95, scaleY : 0.95, ease : Elastic.easeOut});
	} else {
		jTarget.css({ opacity : "0.9"});
		if(!src_view_Trash._isAnimate) {
			return;
		}
		src_view_Trash._isAnimate = false;
		TweenMax.to(src_view_Trash._jTrashBox,1,{ scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut});
		TweenMax.to(src_view_Trash._jTrashFront,1,{ scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut});
		TweenMax.to(src_view_Trash._jTrashBg,1,{ scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut});
	}
};
src_view_Trash.leaveObj = function(jTarget) {
	src_view_Trash.deleteObj(jTarget);
};
src_view_Trash.hide = function() {
	src_view_Trash._isShow = false;
	if(!src_view_Trash._isGrabbed) {
		TweenMax.to(src_view_Trash._jTrashArrow,0.05,{ y : 60, onComplete : function() {
			src_view_Trash._jTrashArrow.hide();
			TweenMax.set(src_view_Trash._jTrashArrow,{ y : 0});
		}});
		TweenMax.to(src_view_Trash._jTrashFront,0.05,{ y : 60, onComplete : function() {
			src_view_Trash._jTrashFront.hide();
			TweenMax.set(src_view_Trash._jTrashFront,{ y : 0});
		}});
		TweenMax.to(src_view_Trash._jTrashBox,0.05,{ y : 60, onComplete : function() {
			src_view_Trash._jTrashBox.hide();
			src_view_Trash._jTrashBg.stop().fadeOut(100);
			TweenMax.set(src_view_Trash._jTrashBox,{ y : 0});
			if(src_view_Trash._arrowAnimate != null) {
				src_view_Trash._arrowAnimate.pause(0);
			}
		}});
	}
};
src_view_Trash.show = function(event) {
	if(src_view_Trash._grabPosition + 80 > event.pageY && src_view_Trash._grabPosition - 80 < event.pageY) {
		return;
	}
	if(src_view_Trash._isShow) {
		return;
	}
	src_view_Trash._isShow = true;
	TweenMax.set(src_view_Trash._jTrashArrow,{ y : 60});
	src_view_Trash._jTrashArrow.show();
	src_view_Trash._jTrashBox.show();
	src_view_Trash._jTrashFront.show();
	src_view_Trash._jTrashBg.stop().fadeIn(100);
	TweenMax.to(src_view_Trash._jTrashBox,0.05,{ y : -30, onComplete : function() {
		TweenMax.to(src_view_Trash._jTrashBox,0.05,{ y : 0});
	}});
	TweenMax.to(src_view_Trash._jTrashFront,0.05,{ y : -30, onComplete : function() {
		TweenMax.to(src_view_Trash._jTrashFront,0.05,{ y : 0});
	}});
	src_view_Trash._arrowAnimate = TweenMax.to(src_view_Trash._jTrashArrow,0.8,{ y : 30, repeat : -1, yoyo : true, ease : Circ.easeOut});
};
src_view_Trash.deleteObj = function(jTarget) {
	if(src_view_Trash.isOnObj(jTarget)) {
		src_view_Trash._isGrabbed = true;
		jTarget.css({ "z-index" : "3000"}).css({ opacity : "1"});
		if(src_view_Trash._jTrashBox.width() < jTarget.width()) {
			TweenMax.to(jTarget,0.2,{ scaleX : 0.6, scaleY : 0.7});
		}
		var trashTop = src_view_Trash._jTrashBox.offset().top;
		var trashBtm = trashTop + src_view_Trash._jTrashBox.height();
		var tarBtm = jTarget.offset().top + jTarget.height();
		var btmDiff = trashBtm - tarBtm;
		var top = -200 - btmDiff;
		var left = jTarget.parent().width() / 2 - jTarget.width() / 2;
		TweenMax.to(jTarget,0.2,{ y : top, left : left, delay : 0.2});
		TweenMax.to(jTarget,0.1,{ y : 0, delay : 0.5, onComplete : function() {
			jTarget.remove();
			src_Manager.setCounter();
			src_view_Mainmenu.clearDrop(jTarget.data("id"));
			src_view_Trash._isGrabbed = false;
		}});
		TweenMax.to(src_view_Trash._jTrashBox,0.5,{ y : 15, ease : Elastic.easeIn, delay : 0.4});
		TweenMax.to(src_view_Trash._jTrashFront,0.5,{ y : 15, ease : Elastic.easeIn, delay : 0.4});
		TweenMax.to(src_view_Trash._jTrashBg,1,{ scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut, delay : 1});
		TweenMax.to(src_view_Trash._jTrashFront,0.8,{ y : 0, scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut, delay : 1});
		TweenMax.to(src_view_Trash._jTrashBox,0.8,{ y : 0, scaleX : 1.0, scaleY : 1.0, ease : Elastic.easeOut, delay : 1, onComplete : function() {
			if(src_utils_Drag.getGrabObj() == null) {
				src_view_Trash.hide();
			}
		}});
	}
};
src_view_Trash.isOnObj = function(jTarget) {
	var y = jTarget.offset().top;
	var h = y + jTarget.height();
	var x = jTarget.offset().left;
	var w = x + jTarget.width();
	var top = src_view_Trash._jTrashBox.offset().top;
	var left = src_view_Trash._jTrashBox.offset().left;
	var bottom = top + src_view_Trash._jTrashBox.height();
	var right = left + src_view_Trash._jTrashBox.width();
	var judge = top < h && left < w && bottom > y && right > x;
	return judge;
};
src_view_Trash.getGrabPosi = function(event) {
	src_view_Trash._grabPosition = event.pageY;
};
var src_view_mainboard_Human = function() { };
src_view_mainboard_Human.__name__ = true;
src_view_mainboard_Human.init = function(jMainboard) {
	src_view_mainboard_Human._jMainboard = jMainboard;
	src_view_mainboard_Human._jHuman = src_view_mainboard_Human._jMainboard.find(".human");
	src_view_mainboard_Human._jHuman.append("<div class=\"human-talk\"><p></p></div>");
	src_view_mainboard_Human._jTalk = src_view_mainboard_Human._jHuman.find(".human-talk");
	src_view_mainboard_Human._jText = src_view_mainboard_Human._jTalk.find("p");
	src_view_mainboard_Human._SPEED = 0.08;
	src_view_mainboard_Human.talk("ようこそ",1000);
	src_view_mainboard_Human._INTERVAL = 8000;
};
src_view_mainboard_Human.talk = function(str,delay) {
	if(delay == null) {
		delay = 0;
	}
	return;
};
src_view_mainboard_Human.comment = function(jTarget,str) {
	return;
};
src_view_mainboard_Human.randamtalk = function() {
	var text = src_view_mainboard_Human.talkArray();
	var num = Math.floor(Math.random() * text.length);
	src_view_mainboard_Human.talk(text[num]);
};
src_view_mainboard_Human.setSize = function(str) {
	var linefeed = 0;
	var lineHight = 20;
	var padding = -30;
	var arrow = -45;
	if(str.indexOf("/") > -1) {
		linefeed = str.split("/").length - 1;
	}
	src_view_mainboard_Human._jTalk.css({ top : padding + -(linefeed * lineHight) + arrow + "px"});
};
src_view_mainboard_Human.typing = function(str) {
	var array = str.split("");
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		var text = src_view_mainboard_Human.wordWrap(array[i]);
		if(array[i] == "/") {
			text = text.split("<span>/</span>").join("<br>");
		}
		src_view_mainboard_Human._jText.append(text);
		var jSpan = src_view_mainboard_Human._jText.find("span");
		var length = jSpan.length;
		var _g3 = 0;
		var _g2 = length;
		while(_g3 < _g2) {
			var i1 = [_g3++];
			src_view_mainboard_Human._jText.find("span").eq(i1[0]).hide();
			TweenMax.to(src_view_mainboard_Human._jText.find("span").eq(i1[0]),0,{ delay : src_view_mainboard_Human._SPEED * i1[0], onComplete : (function(i2) {
				return function() {
					src_view_mainboard_Human._jText.find("span").eq(i2[0]).show();
				};
			})(i1)});
		}
	}
};
src_view_mainboard_Human.wordWrap = function(str) {
	return "<span>" + str + "</span>";
};
src_view_mainboard_Human.talkArray = function() {
	var array = ["おはよう","安くない？","やっす","現在の金額は" + $("#contact").find("#price").text() + "です。"];
	return array;
};
var src_view_mainmenu_Scrollbar = function() { };
src_view_mainmenu_Scrollbar.__name__ = true;
src_view_mainmenu_Scrollbar.init = function(jMainmenu) {
	src_view_mainmenu_Scrollbar._jMainmenu = jMainmenu;
	src_view_mainmenu_Scrollbar._jSlider = src_view_mainmenu_Scrollbar._jMainmenu.find(".slider");
	var browser = jp_okawa_utils_Ua.getBrowserName();
	var mouseevent = browser == "Firefox" ? "wheel" : "mousewheel";
	if(mouseevent.indexOf("IE") > -1) {
		mouseevent = "mousewheel";
	} else {
		mouseevent = mouseevent;
	}
	src_view_mainmenu_Scrollbar.setBarSize();
	src_utils_Dom.jWindow.on("resize",null,src_view_mainmenu_Scrollbar.setBarSize);
	src_view_mainmenu_Scrollbar._jSlider.on(mouseevent,null,src_view_mainmenu_Scrollbar.onMousewheel);
	src_view_mainmenu_Scrollbar._jSlider.on("touchstart",null,src_view_mainmenu_Scrollbar.setTouchPosition);
	src_view_mainmenu_Scrollbar._jSlider.on("touchmove",null,src_view_mainmenu_Scrollbar.onMousewheel);
	src_view_mainmenu_Scrollbar._jMainmenu.find(".scroll-navi").on("mousedown touchstart",null,src_view_mainmenu_Scrollbar.onMousedown);
};
src_view_mainmenu_Scrollbar.setBarSize = function(event) {
	var length = src_view_mainmenu_Scrollbar._jSlider.length;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		src_view_mainmenu_Scrollbar.getDom(src_view_mainmenu_Scrollbar._jSlider.eq(i));
		var scale = src_view_mainmenu_Scrollbar.getScale();
		var nH = scale >= 100 ? src_view_mainmenu_Scrollbar._jScroll.height() : Math.round(src_view_mainmenu_Scrollbar._jScroll.height() * scale / 100);
		src_view_mainmenu_Scrollbar._jNavi.height(nH);
	}
};
src_view_mainmenu_Scrollbar.getDom = function(jTarget) {
	src_view_mainmenu_Scrollbar._jInner = jTarget.find("ul");
	src_view_mainmenu_Scrollbar._jScroll = jTarget.siblings(".slider-scroll");
	src_view_mainmenu_Scrollbar._jNavi = src_view_mainmenu_Scrollbar._jScroll.find(".scroll-navi");
	src_view_mainmenu_Scrollbar._max = (src_view_mainmenu_Scrollbar._jInner.height() - src_view_mainmenu_Scrollbar._jSlider.height()) * -1 + 20;
	src_view_mainmenu_Scrollbar._posi = Std.parseInt(src_view_mainmenu_Scrollbar._jInner.css("margin-top"));
	src_view_mainmenu_Scrollbar._ratio = src_view_mainmenu_Scrollbar.getScale();
};
src_view_mainmenu_Scrollbar.getScale = function() {
	var vH = src_view_mainmenu_Scrollbar._jSlider.height();
	var tH = src_view_mainmenu_Scrollbar._jInner.height() + 10;
	var sH = src_view_mainmenu_Scrollbar._jScroll.height();
	var scale = vH * 100 / tH;
	return scale;
};
src_view_mainmenu_Scrollbar.onMousewheel = function(event) {
	var delta = event.originalEvent.wheelDelta;
	if(delta == null) {
		delta = Math.round(event.originalEvent.deltaY * -120);
	}
	if(event.type == "touchmove") {
		var y = src_view_mainmenu_Scrollbar._touchPosiY > event.originalEvent.touches[0].pageY ? -1 : 1;
		delta = Math.round(event.originalEvent.touches[0].pageY / 10 * y);
	}
	src_view_mainmenu_Scrollbar.getDom($(event.currentTarget));
	src_view_mainmenu_Scrollbar.move(delta);
};
src_view_mainmenu_Scrollbar.onMousedown = function(event) {
	var jTarget = $(event.currentTarget).parent(".slider-scroll").siblings(".slider");
	var base = event.pageY;
	src_view_mainmenu_Scrollbar.getDom(jTarget);
	var onMousemove = function(event1) {
		var diff = base - event1.pageY;
		src_view_mainmenu_Scrollbar.move(diff * 15);
		return false;
	};
	var onMouseup = null;
	onMouseup = function(event2) {
		src_utils_Dom.jBody.unbind("mousemove",onMousemove).unbind("mouseup",onMouseup);
	};
	var onMouseup1 = onMouseup;
	src_utils_Dom.jBody.on({ mousemove : onMousemove, mouseup : onMouseup1});
};
src_view_mainmenu_Scrollbar.move = function(delta) {
	if(src_view_mainmenu_Scrollbar._ratio >= 100) {
		return;
	}
	delta = Math.round(delta * .3);
	var val = src_view_mainmenu_Scrollbar._posi + delta;
	if(0 < val) {
		val = 0;
	}
	var adjustment = src_view_mainmenu_Scrollbar._jMainmenu.hasClass("ratio") ? -10 : -30;
	if(src_view_mainmenu_Scrollbar._max >= val) {
		val = src_view_mainmenu_Scrollbar._max + adjustment;
	}
	TweenMax.to(src_view_mainmenu_Scrollbar._jInner,0.1,{ marginTop : val, ease : "linear"});
	val = (val * src_view_mainmenu_Scrollbar._ratio / 100 | 0) * -1;
	TweenMax.to(src_view_mainmenu_Scrollbar._jNavi,0.1,{ marginTop : val, ease : "linear"});
};
src_view_mainmenu_Scrollbar.setTouchPosition = function(event) {
	src_view_mainmenu_Scrollbar._touchPosiY = event.originalEvent.touches[0].pageY;
};
var src_view_sidemenu_Color = function() { };
src_view_sidemenu_Color.__name__ = true;
src_view_sidemenu_Color.show = function(jBtn) {
	src_view_sidemenu_Color._jSidemenuRight = $("#sidemenu-right");
	src_view_sidemenu_Color._jCloseBtn = src_view_sidemenu_Color._jSidemenuRight.find(".close-btn");
	src_view_sidemenu_Color._jColorInner = src_view_sidemenu_Color._jSidemenuRight.find(".color-inner");
	src_view_sidemenu_Color._jColorConfig = src_view_sidemenu_Color._jSidemenuRight.find(".color-config");
	src_view_sidemenu_Color._jColorList = src_view_sidemenu_Color._jColorInner.find(".color-list");
	if(jBtn.hasClass("open")) {
		src_view_sidemenu_Color.hide(jBtn);
		return;
	}
	src_view_sidemenu_Color._jCloseBtn.show();
	TweenMax.to(src_view_sidemenu_Color._jColorInner,0.5,{ x : -78, ease : Expo.easeOut});
	src_view_sidemenu_Color.changeColor(jBtn,src_view_sidemenu_Color._jColorConfig);
	src_view_sidemenu_Color._jCloseBtn.on("mousedown",null,function(event) {
		src_view_sidemenu_Color.hide(jBtn);
		src_view_sidemenu_Color._jColorConfig.find(".close-btn").unbind("mousedown");
	});
};
src_view_sidemenu_Color.hide = function(jBtn) {
	src_view_sidemenu_Color._jCloseBtn.hide();
	jBtn.removeClass("open");
	TweenMax.to(src_view_sidemenu_Color._jColorInner,0.5,{ x : 0, ease : Expo.easeOut});
};
src_view_sidemenu_Color.changeColor = function(jBtn,jbox) {
	src_view_sidemenu_Color._jColorList.find("li").on("mousedown",null,function(event) {
		var jAreaObj = $("#mainboard").find(".object");
		var target = $(event.currentTarget);
		if(target.hasClass("current")) {
			return;
		}
		var cls = target.prop("class");
		jBtn.removeClass();
		jBtn.addClass(cls);
		src_view_sidemenu_Color._jColorList.find("li").removeClass("current");
		target.addClass("current");
		if(jAreaObj != null) {
			src_view_sidemenu_Color.changeObjColor(jAreaObj,cls);
		}
	});
};
src_view_sidemenu_Color.changeObjColor = function(jAreaObj,cls) {
	var length = jAreaObj.length;
	var _g1 = 0;
	var _g = length;
	while(_g1 < _g) {
		var i = _g1++;
		var jObj = jAreaObj.eq(i).find("img");
		var src1 = jObj.prop("src");
		var array = src1.split("/");
		var color = array[array.length - 2];
		var newSrc = src1.split("/" + color + "/").join("/" + cls + "/");
		jObj.prop("src",newSrc);
	}
};
var src_view_sidemenu_Lightbox = function() {
	src_view_Sidemenu.call(this);
};
src_view_sidemenu_Lightbox.__name__ = true;
src_view_sidemenu_Lightbox.init = function() {
	src_view_sidemenu_Lightbox._jLightBox = $("#lightbox");
	src_view_sidemenu_Lightbox._jLightBoxBg = src_view_sidemenu_Lightbox._jLightBox.find(".lightbox-bg");
	src_view_sidemenu_Lightbox._jLightText = src_view_sidemenu_Lightbox._jLightBox.find(".caution");
	src_view_sidemenu_Lightbox._jLightSub = src_view_sidemenu_Lightbox._jLightBox.find("h3");
};
src_view_sidemenu_Lightbox.show = function(cls,jBtn) {
	var jBox = src_view_sidemenu_Lightbox._jLightBox.find("." + cls);
	var sPEED = 300;
	src_view_sidemenu_Lightbox._jLightText.hide();
	src_view_sidemenu_Lightbox._jLightSub.hide();
	jBox.width(50);
	src_view_sidemenu_Lightbox._jLightBox.fadeIn(sPEED,function() {
		jBox.show();
		var time = new haxe_Timer(500);
		time.run = function() {
			src_view_sidemenu_Lightbox._jLightText.fadeIn(100);
			src_view_sidemenu_Lightbox._jLightSub.fadeIn(100);
			time.stop();
		};
		TweenMax.to(jBox,1,{ width : 800, ease : Elastic.easeOut});
	});
	jBox.find(".close-btn").on("mousedown",null,function(event) {
		src_view_sidemenu_Lightbox.hide(jBox,sPEED);
	});
	src_view_sidemenu_Lightbox._jLightBoxBg.on("mousedown",null,function(event1) {
		src_view_sidemenu_Lightbox.hide(jBox,sPEED);
		src_view_sidemenu_Lightbox._jLightBoxBg.unbind("mousedown");
	});
};
src_view_sidemenu_Lightbox.hide = function(jBox,sPEED) {
	jBox.fadeOut(sPEED);
	src_view_sidemenu_Lightbox._jLightBox.fadeOut(sPEED);
	src_view_sidemenu_Lightbox._jLightText.hide();
	src_view_sidemenu_Lightbox._jLightSub.hide();
	jBox.find(".close-btn").unbind("mousedown");
};
src_view_sidemenu_Lightbox.__super__ = src_view_Sidemenu;
src_view_sidemenu_Lightbox.prototype = $extend(src_view_Sidemenu.prototype,{
});
String.__name__ = true;
Array.__name__ = true;
var __map_reserved = {}
jp_okawa_utils_Ua.userAgent = window.navigator.userAgent;
src_utils_Dom.jWindow = $(window);
src_utils_Dom.window = window;
src_utils_Dom.jBody = $("body");
src_Main.main();
})();
